import streamlit as st


def show_login(api):
    st.title("üîê –í—Ö–æ–¥")

    with st.form("login_form"):
        email = st.text_input("Email")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submit = st.form_submit_button("–í–æ–π—Ç–∏")

        if submit:
            if email and password:
                try:
                    with st.spinner("–í—Ö–æ–¥..."):
                        response = api.login(email, password)
                    if response.status_code == 200:
                        st.success("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
                        st.rerun()
                    else:
                        error_detail = response.json().get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                        st.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {error_detail}")
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            else:
                st.warning("‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")


def show_register(api):
    st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")

    with st.form("register_form"):
        username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        email = st.text_input("Email")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submit = st.form_submit_button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")

        if submit:
            if username and email and password:
                try:
                    with st.spinner("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..."):
                        response = api.register(username, email, password)
                    if response.status_code == 200:
                        st.success("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                        with st.spinner('–í—Ö–æ–¥'):
                            login_response = api.login(email, password)
                        if response.status_code == 200:
                            st.success("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
                            st.rerun()
                        else:
                            error_detail = login_response.json().get('detail','–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                            st.error(f"‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –Ω–æ –≤—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è: {error_detail}")
                    else:
                        error_detail = response.json().get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                        st.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {error_detail}")
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            else:
                st.warning("‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")


def show_profile(api):
    col1, col2 = st.columns([3, 1])

    with col1:
        st.title("üë§ –ü—Ä–æ—Ñ–∏–ª—å")
        try:
            with st.spinner("–ó–∞—à—Ä—É–∑–∫–∞..."):
                response = api.get_me()
            if response.status_code == 200:
                user = response.json()
                st.write(f"**Username:** {user['username']}")
                st.write(f"**Email:** {user['email']}")
                st.write(f"**ID:** {user['id']}")
            else:
                st.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    with col2:
        st.write("")
        st.write("")
        if st.button("üö™ –í—ã–π—Ç–∏"):
            try:
                api.logout()
                st.rerun()
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: {e}")
